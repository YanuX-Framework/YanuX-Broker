{
    "info": {
        "title": "YanuX Broker API",
        "description": "YanuX Broker's REST API",
        "version": "1.0.0"
    },
    "paths": {
        "/users": {
            "get": {
                "parameters": [
                    {
                        "description": "Number of results to return",
                        "in": "query",
                        "name": "$limit",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Number of results to skip",
                        "in": "query",
                        "name": "$skip",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Property to sort results",
                        "in": "query",
                        "name": "$sort",
                        "style": "deepObject",
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "description": "Query parameters to filter",
                        "in": "query",
                        "name": "filter",
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/users"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/users_list"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Retrieves a list of all resources from the service.",
                "summary": "",
                "tags": [
                    "users"
                ],
                "security": []
            },
            "post": {
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/users"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Creates a new resource with data.",
                "summary": "",
                "tags": [
                    "users"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/users"
                            }
                        }
                    }
                }
            }
        },
        "/users/{_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of users to return",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/users"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Retrieves a single resource with the given id from the service.",
                "summary": "",
                "tags": [
                    "users"
                ],
                "security": []
            },
            "put": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of users to update",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/users"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Updates the resource identified by id using data.",
                "summary": "",
                "tags": [
                    "users"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/users"
                            }
                        }
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of users to update",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/users"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Updates the resource identified by id using data.",
                "summary": "",
                "tags": [
                    "users"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/users"
                            }
                        }
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of users to remove",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/users"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Removes the resource with id.",
                "summary": "",
                "tags": [
                    "users"
                ],
                "security": []
            }
        },
        "/clients": {
            "get": {
                "parameters": [
                    {
                        "description": "Number of results to return",
                        "in": "query",
                        "name": "$limit",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Number of results to skip",
                        "in": "query",
                        "name": "$skip",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Property to sort results",
                        "in": "query",
                        "name": "$sort",
                        "style": "deepObject",
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "description": "Query parameters to filter",
                        "in": "query",
                        "name": "filter",
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/clients"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clients_list"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Retrieves a list of all resources from the service.",
                "summary": "",
                "tags": [
                    "clients"
                ],
                "security": []
            },
            "post": {
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clients"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Creates a new resource with data.",
                "summary": "",
                "tags": [
                    "clients"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/clients"
                            }
                        }
                    }
                }
            }
        },
        "/clients/{_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of clients to return",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clients"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Retrieves a single resource with the given id from the service.",
                "summary": "",
                "tags": [
                    "clients"
                ],
                "security": []
            },
            "put": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of clients to update",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clients"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Updates the resource identified by id using data.",
                "summary": "",
                "tags": [
                    "clients"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/clients"
                            }
                        }
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of clients to update",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clients"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Updates the resource identified by id using data.",
                "summary": "",
                "tags": [
                    "clients"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/clients"
                            }
                        }
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of clients to remove",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clients"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Removes the resource with id.",
                "summary": "",
                "tags": [
                    "clients"
                ],
                "security": []
            }
        },
        "/events": {
            "post": {
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/events"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Creates a new resource with data.",
                "summary": "",
                "tags": [
                    "events"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/events"
                            }
                        }
                    }
                }
            }
        },
        "/resources": {
            "get": {
                "parameters": [
                    {
                        "description": "Number of results to return",
                        "in": "query",
                        "name": "$limit",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Number of results to skip",
                        "in": "query",
                        "name": "$skip",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Property to sort results",
                        "in": "query",
                        "name": "$sort",
                        "style": "deepObject",
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "description": "Query parameters to filter",
                        "in": "query",
                        "name": "filter",
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/resources"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/resources_list"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Retrieves a list of all resources from the service.",
                "summary": "",
                "tags": [
                    "resources"
                ],
                "security": []
            },
            "post": {
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/resources"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Creates a new resource with data.",
                "summary": "",
                "tags": [
                    "resources"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/resources"
                            }
                        }
                    }
                }
            }
        },
        "/resources/{_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of resources to return",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/resources"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Retrieves a single resource with the given id from the service.",
                "summary": "",
                "tags": [
                    "resources"
                ],
                "security": []
            },
            "put": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of resources to update",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/resources"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Updates the resource identified by id using data.",
                "summary": "",
                "tags": [
                    "resources"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/resources"
                            }
                        }
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of resources to update",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/resources"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Updates the resource identified by id using data.",
                "summary": "",
                "tags": [
                    "resources"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/resources"
                            }
                        }
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of resources to remove",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/resources"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Removes the resource with id.",
                "summary": "",
                "tags": [
                    "resources"
                ],
                "security": []
            }
        },
        "/resource-subscriptions": {
            "get": {
                "parameters": [
                    {
                        "description": "Number of results to return",
                        "in": "query",
                        "name": "$limit",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Number of results to skip",
                        "in": "query",
                        "name": "$skip",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Property to sort results",
                        "in": "query",
                        "name": "$sort",
                        "style": "deepObject",
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "description": "Query parameters to filter",
                        "in": "query",
                        "name": "filter",
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/resource-subscriptions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/resource-subscriptions_list"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Retrieves a list of all resources from the service.",
                "summary": "",
                "tags": [
                    "resource-subscriptions"
                ],
                "security": []
            },
            "post": {
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/resource-subscriptions"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Creates a new resource with data.",
                "summary": "",
                "tags": [
                    "resource-subscriptions"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/resource-subscriptions"
                            }
                        }
                    }
                }
            }
        },
        "/resource-subscriptions/{_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of resource-subscriptions to return",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/resource-subscriptions"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Retrieves a single resource with the given id from the service.",
                "summary": "",
                "tags": [
                    "resource-subscriptions"
                ],
                "security": []
            },
            "put": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of resource-subscriptions to update",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/resource-subscriptions"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Updates the resource identified by id using data.",
                "summary": "",
                "tags": [
                    "resource-subscriptions"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/resource-subscriptions"
                            }
                        }
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of resource-subscriptions to update",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/resource-subscriptions"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Updates the resource identified by id using data.",
                "summary": "",
                "tags": [
                    "resource-subscriptions"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/resource-subscriptions"
                            }
                        }
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of resource-subscriptions to remove",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/resource-subscriptions"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Removes the resource with id.",
                "summary": "",
                "tags": [
                    "resource-subscriptions"
                ],
                "security": []
            }
        },
        "/beacons": {
            "get": {
                "parameters": [
                    {
                        "description": "Number of results to return",
                        "in": "query",
                        "name": "$limit",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Number of results to skip",
                        "in": "query",
                        "name": "$skip",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Property to sort results",
                        "in": "query",
                        "name": "$sort",
                        "style": "deepObject",
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "description": "Query parameters to filter",
                        "in": "query",
                        "name": "filter",
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/beacons"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/beacons_list"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Retrieves a list of all resources from the service.",
                "summary": "",
                "tags": [
                    "beacons"
                ],
                "security": []
            },
            "post": {
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/beacons"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Creates a new resource with data.",
                "summary": "",
                "tags": [
                    "beacons"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/beacons"
                            }
                        }
                    }
                }
            }
        },
        "/beacons/{_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of beacons to return",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/beacons"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Retrieves a single resource with the given id from the service.",
                "summary": "",
                "tags": [
                    "beacons"
                ],
                "security": []
            },
            "put": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of beacons to update",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/beacons"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Updates the resource identified by id using data.",
                "summary": "",
                "tags": [
                    "beacons"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/beacons"
                            }
                        }
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of beacons to update",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/beacons"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Updates the resource identified by id using data.",
                "summary": "",
                "tags": [
                    "beacons"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/beacons"
                            }
                        }
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of beacons to remove",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/beacons"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Removes the resource with id.",
                "summary": "",
                "tags": [
                    "beacons"
                ],
                "security": []
            }
        },
        "/instances": {
            "get": {
                "parameters": [
                    {
                        "description": "Number of results to return",
                        "in": "query",
                        "name": "$limit",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Number of results to skip",
                        "in": "query",
                        "name": "$skip",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Property to sort results",
                        "in": "query",
                        "name": "$sort",
                        "style": "deepObject",
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "description": "Query parameters to filter",
                        "in": "query",
                        "name": "filter",
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/instances"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/instances_list"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Retrieves a list of all resources from the service.",
                "summary": "",
                "tags": [
                    "instances"
                ],
                "security": []
            },
            "post": {
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/instances"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Creates a new resource with data.",
                "summary": "",
                "tags": [
                    "instances"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/instances"
                            }
                        }
                    }
                }
            }
        },
        "/instances/{_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of instances to return",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/instances"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Retrieves a single resource with the given id from the service.",
                "summary": "",
                "tags": [
                    "instances"
                ],
                "security": []
            },
            "put": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of instances to update",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/instances"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Updates the resource identified by id using data.",
                "summary": "",
                "tags": [
                    "instances"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/instances"
                            }
                        }
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of instances to update",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/instances"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Updates the resource identified by id using data.",
                "summary": "",
                "tags": [
                    "instances"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/instances"
                            }
                        }
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of instances to remove",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/instances"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Removes the resource with id.",
                "summary": "",
                "tags": [
                    "instances"
                ],
                "security": []
            }
        },
        "/devices": {
            "get": {
                "parameters": [
                    {
                        "description": "Number of results to return",
                        "in": "query",
                        "name": "$limit",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Number of results to skip",
                        "in": "query",
                        "name": "$skip",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Property to sort results",
                        "in": "query",
                        "name": "$sort",
                        "style": "deepObject",
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "description": "Query parameters to filter",
                        "in": "query",
                        "name": "filter",
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/devices"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/devices_list"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Retrieves a list of all resources from the service.",
                "summary": "",
                "tags": [
                    "devices"
                ],
                "security": []
            },
            "post": {
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/devices"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Creates a new resource with data.",
                "summary": "",
                "tags": [
                    "devices"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/devices"
                            }
                        }
                    }
                }
            }
        },
        "/devices/{_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of devices to return",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/devices"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Retrieves a single resource with the given id from the service.",
                "summary": "",
                "tags": [
                    "devices"
                ],
                "security": []
            },
            "put": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of devices to update",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/devices"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Updates the resource identified by id using data.",
                "summary": "",
                "tags": [
                    "devices"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/devices"
                            }
                        }
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of devices to update",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/devices"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Updates the resource identified by id using data.",
                "summary": "",
                "tags": [
                    "devices"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/devices"
                            }
                        }
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of devices to remove",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/devices"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Removes the resource with id.",
                "summary": "",
                "tags": [
                    "devices"
                ],
                "security": []
            }
        },
        "/proxemics": {
            "get": {
                "parameters": [
                    {
                        "description": "Number of results to return",
                        "in": "query",
                        "name": "$limit",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Number of results to skip",
                        "in": "query",
                        "name": "$skip",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Property to sort results",
                        "in": "query",
                        "name": "$sort",
                        "style": "deepObject",
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "description": "Query parameters to filter",
                        "in": "query",
                        "name": "filter",
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/proxemics"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/proxemics_list"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Retrieves a list of all resources from the service.",
                "summary": "",
                "tags": [
                    "proxemics"
                ],
                "security": []
            },
            "post": {
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/proxemics"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Creates a new resource with data.",
                "summary": "",
                "tags": [
                    "proxemics"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/proxemics"
                            }
                        }
                    }
                }
            }
        },
        "/proxemics/{_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of proxemics to return",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/proxemics"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Retrieves a single resource with the given id from the service.",
                "summary": "",
                "tags": [
                    "proxemics"
                ],
                "security": []
            },
            "put": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of proxemics to update",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/proxemics"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Updates the resource identified by id using data.",
                "summary": "",
                "tags": [
                    "proxemics"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/proxemics"
                            }
                        }
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of proxemics to update",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/proxemics"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Updates the resource identified by id using data.",
                "summary": "",
                "tags": [
                    "proxemics"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/proxemics"
                            }
                        }
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of proxemics to remove",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/proxemics"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Removes the resource with id.",
                "summary": "",
                "tags": [
                    "proxemics"
                ],
                "security": []
            }
        },
        "/locations": {
            "get": {
                "parameters": [
                    {
                        "description": "Number of results to return",
                        "in": "query",
                        "name": "$limit",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Number of results to skip",
                        "in": "query",
                        "name": "$skip",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Property to sort results",
                        "in": "query",
                        "name": "$sort",
                        "style": "deepObject",
                        "schema": {
                            "type": "object"
                        }
                    },
                    {
                        "description": "Query parameters to filter",
                        "in": "query",
                        "name": "filter",
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "$ref": "#/components/schemas/locations"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/locations_list"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Retrieves a list of all resources from the service.",
                "summary": "",
                "tags": [
                    "locations"
                ],
                "security": []
            },
            "post": {
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/locations"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Creates a new resource with data.",
                "summary": "",
                "tags": [
                    "locations"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/locations"
                            }
                        }
                    }
                }
            }
        },
        "/locations/{_id}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of locations to return",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/locations"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Retrieves a single resource with the given id from the service.",
                "summary": "",
                "tags": [
                    "locations"
                ],
                "security": []
            },
            "put": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of locations to update",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/locations"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Updates the resource identified by id using data.",
                "summary": "",
                "tags": [
                    "locations"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/locations"
                            }
                        }
                    }
                }
            },
            "patch": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of locations to update",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/locations"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Updates the resource identified by id using data.",
                "summary": "",
                "tags": [
                    "locations"
                ],
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/locations"
                            }
                        }
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "_id",
                        "description": "ID of locations to remove",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/locations"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "not authenticated"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "500": {
                        "description": "general error"
                    }
                },
                "description": "Removes the resource with id.",
                "summary": "",
                "tags": [
                    "locations"
                ],
                "security": []
            }
        }
    },
    "components": {
        "schemas": {
            "users": {
                "title": "users",
                "required": [
                    "email",
                    "brokerName"
                ],
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "_id": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "brokerName": {
                        "type": "string"
                    }
                }
            },
            "users_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/users"
                }
            },
            "clients": {
                "title": "clients",
                "required": [
                    "brokerName"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "_id": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "brokerName": {
                        "type": "string"
                    }
                }
            },
            "clients_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/clients"
                }
            },
            "events": {
                "properties": {
                    "value": {
                        "type": "object"
                    },
                    "name": {
                        "type": "string"
                    },
                    "resource": {
                        "type": "string"
                    }
                }
            },
            "resources": {
                "title": "resources",
                "required": [
                    "user",
                    "client",
                    "default",
                    "data",
                    "brokerName"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    },
                    "client": {
                        "type": "string"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "sharedWith": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "data": {
                        "type": "object",
                        "properties": {}
                    },
                    "_id": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "brokerName": {
                        "type": "string"
                    }
                }
            },
            "resources_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/resources"
                }
            },
            "resource-subscriptions": {
                "title": "resourceSubscriptions",
                "required": [
                    "user",
                    "client",
                    "resource",
                    "brokerName"
                ],
                "properties": {
                    "user": {
                        "type": "string"
                    },
                    "client": {
                        "type": "string"
                    },
                    "resource": {
                        "type": "string"
                    },
                    "_id": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "brokerName": {
                        "type": "string"
                    }
                }
            },
            "resource-subscriptions_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/resource-subscriptions"
                }
            },
            "beacons": {
                "title": "beacons",
                "required": [
                    "user",
                    "deviceUuid",
                    "beaconKey",
                    "beacon",
                    "brokerName"
                ],
                "properties": {
                    "user": {
                        "type": "string"
                    },
                    "deviceUuid": {
                        "type": "string"
                    },
                    "beaconKey": {
                        "type": "string"
                    },
                    "beacon": {
                        "type": "object",
                        "properties": {}
                    },
                    "_id": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "brokerName": {
                        "type": "string"
                    }
                }
            },
            "beacons_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/beacons"
                }
            },
            "devices": {
                "title": "devices",
                "required": [
                    "user",
                    "deviceUuid",
                    "name",
                    "brokerName"
                ],
                "properties": {
                    "user": {
                        "type": "string"
                    },
                    "deviceUuid": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "beaconValues": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {},
                            "required": []
                        }
                    },
                    "capabilities": {
                        "type": "object",
                        "properties": {}
                    },
                    "_id": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "brokerName": {
                        "type": "string"
                    }
                }
            },
            "devices_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/devices"
                }
            },
            "proxemics": {
                "title": "proxemics",
                "required": [
                    "user",
                    "state",
                    "brokerName"
                ],
                "properties": {
                    "user": {
                        "type": "string"
                    },
                    "sharedWith": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "state": {
                        "type": "object",
                        "properties": {}
                    },
                    "_id": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "brokerName": {
                        "type": "string"
                    }
                }
            },
            "proxemics_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/proxemics"
                }
            },
            "locations": {
                "title": "locations",
                "required": [
                    "username",
                    "deviceUuid",
                    "timestamp",
                    "proximity",
                    "position",
                    "brokerName"
                ],
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "deviceUuid": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "proximity": {
                        "type": "object",
                        "properties": {
                            "beacon": {
                                "type": "object",
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "major": {
                                        "type": "number"
                                    },
                                    "minor": {
                                        "type": "number"
                                    }
                                }
                            },
                            "distance": {
                                "type": "number"
                            },
                            "orientation": {
                                "type": "number"
                            },
                            "zone": {
                                "type": "string",
                                "required": false
                            }
                        }
                    },
                    "position": {
                        "type": "object",
                        "properties": {
                            "place": {
                                "type": "string"
                            },
                            "x": {
                                "type": "number"
                            },
                            "y": {
                                "type": "number"
                            },
                            "orientation": {
                                "type": "number"
                            },
                            "zone": {
                                "type": "string",
                                "required": false
                            }
                        }
                    },
                    "_id": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "brokerName": {
                        "type": "string"
                    }
                }
            },
            "locations_list": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/locations"
                }
            }
        }
    },
    "openapi": "3.0.2",
    "tags": [
        {
            "name": "users",
            "description": "A service to manage users"
        },
        {
            "name": "clients",
            "description": "A service to manage client applications"
        },
        {
            "name": "events",
            "description": "A service to manage events"
        },
        {
            "name": "resources",
            "description": "A service to manage resources"
        },
        {
            "name": "resource-subscriptions",
            "description": "A service to manage resource subscriptions"
        },
        {
            "name": "beacons",
            "description": "A service to manage information about beacons (deprecated: locations are now used instead)"
        },
        {
            "name": "instances",
            "description": "A instances service"
        },
        {
            "name": "devices",
            "description": "A service to manage devices"
        },
        {
            "name": "proxemics",
            "description": "A service to manage proxemics"
        },
        {
            "name": "locations",
            "description": "A service to manage information about positions and locations"
        }
    ]
}